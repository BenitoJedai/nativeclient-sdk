#summary Instructions for building and running examples
#labels Featured

This page tells you how to use the Native Client SDK to build and run a Native Client module.

<wiki:toc />

= Before you start =

A few platform notes:

  * So far, these instructions have been confirmed only on Mac and Linux. Builds on Mac aren't currently working.
  * On Windows when you get to the building step, you'll need cygwin (1.7 works; 1.5 doesn't) or some other UNIX toolchain.
  * Although you can use a 64-bit Windows or Linux system, the browser itself must be 32-bit software.

A few terminology notes:

  * You might see the term .nexe in places. It refers to a publishable, platform-independent Native Client module, without debug symbols. {TBD: check}
  * To debug your Native Client module, you need to make a development version of it. {TBD: clarify}

= Getting the software =

To build and run Native Client modules,
you need to get the Native Client SDK
and make sure you have the right version of the browser.

<ol>
<li> Download the SDK for your platform.

  http://build.chromium.org/buildbot/snapshots/nacl_new_sdk/

</li>

<li> Unarchive the SDK. You can probably just double-click the archive file. If you prefer to use the command line, try something like this:

<blockquote>
<pre>tar xvf naclsdk_mac.tgz</pre></blockquote>
</li>

<li> If there are any spaces in the path to the SDK, remove them. {PENDING: check, clarify}
</li>

<li> Download and unarchive a recent version of Chromium from http://build.chromium.org/buildbot/continuous/. The following versions have been confirmed to work:

  * <a href="http://build.chromium.org/buildbot/continuous/mac/2010-04-02/43509/chrome-mac.zip">43509</a> (Mac) {PENDING: 2D not working; 3D is flakey}
  * ... (Windows)
  * ... (Linux; if you have a 64-bit machine, see https://bugs.launchpad.net/ubuntu/+source/ia32-libs/+bug/253430 for help in running a 32-bit browser)
  
{Note: Before we release these instructions to the public, the Dev channel will be sufficient.}
</li>

</ol>

= Running pre-built examples =

Your first step is to make sure that
you can run Native Client modules that are already on the web.

<ol>
<li> Run Chromium with *--enable-nacl* flag. You probably want to use *--user-data-dir* as well, so that you can have two instances of Google Chrome running (letting you surf the web using an ordinary version of Google Chrome, without Native Client enabled).

*Note:* On the Mac, you also need *--no-sandbox*.

For example, to run Chromium on a Mac from the command line:

<blockquote>
<pre>/Users/me/Downloads/chrome-mac/Chromium.app/Contents/MacOS/Chromium \
 --enable-nacl --no-sandbox --user-data-dir=~/nacl-chrome-profile</pre></blockquote>
</li>

<li> If you're using Linux, Mac, or 32-bit Windows, visit the following page:

     http://www/~kathyw/nacl-sdk/x86-32/hello_world.html

If you're using 64-bit Windows, visit this page:

    {TBD: point to page with a 64-bit .nexe}
</li>

<li> Look at and interact with the page to see whether the module loaded successfully.

  * Look at the *Status* heading. If you see SUCCESS, then the example is working. If not, try reloading the page. If you still don't see SUCCESS — for example, if it says the Client modules are loading too slowly — the example might still be OK.
  * Click the *Call fortytwo()* button. <br /> A dialog should come up, saying that the page says: *42*
  * Click the *Call helloworld()* button. <br /> A dialog should come up, saying that the page says: *hello, world.*

{PENDING: Troubleshoot common issues. Refer to the [https://groups.google.com/group/native-client-discuss native-client-discuss group]. Until this is external, just email the nacl team to see if someone else has had the same problem.}
</li>

</ol>

Once you've successfully run a published Native Client module,
you're ready to build and run examples in the SDK.

= Building and running the SDK examples =

Before you can run any of the examples in the SDK, you need to build them.
Then you need to use an HTTP URL
to load an example's page.

<ol>
<li> Invoke `make` from the `examples` directory of the SDK to build the examples:

<blockquote>
<pre> cd native_client_sdk_0_1_0_0/examples
make</pre></blockquote>

This step creates publishable and development versions of the SDK examples,
placing the results under `publish` and `develop` directories, respectively.
</li>

<li> Run Chromium with the same flags as before. (If it's still running, you don't need to restart it.) </li>

<li>
If you don't already have an HTTP server running,
start one up
so that you can get to the examples' built files using HTTP.
To use the HTTP server that's included in the SDK:
<blockquote>
<pre> cd native_client_sdk_0_1_0_0/examples
python httpd.py</pre></blockquote>
</li>

<li>
Load the npapi_helloworld example
from `examples/publish/PLATFORM_NAME/npapi_helloworld.html`.
For example, if you're using
the HTTP server that's included in the SDK:

  http://localhost:5103/publish/mac_x86/hello_world.html (Mac)
  http://localhost:5103/publish/linux_x86/hello_world.html (Linux)

If you see SUCCESS under the Status heading,
then you've successfully built and executed the hello world example.
Woohoo!
</li>
</ol>

= What to do next =

  * Try running the [http://www/~kathyw/nacl-sdk/x86-32/pi_generator.html Pi Generator example]. {Note: This example uses Pepper 2D drawing, which doesn't currently work on Mac in publishable Native Client modules.} 
  * Try running the [http://www/~kathyw/nacl-sdk/x86-32/tumbler.html Tumbler example]. {Note: This example uses Pepper 3D drawing.} 
  * See DebuggingModules
  * See WritingModules

= Move me =

{PENDING: The stuff in this section will move (and not necessarily be in this page).}


== Dev channel ==

These are miscellaneous instructions that we'll substitute for the Chromium instructions, once the dev channel works:

<ol>
<li>
Bring up the *About Google Chrome* dialog, and make sure you're running the Dev channel version of Google Chrome. On the Mac, the menu item that brings up this dialog under the Chrome menu; on Linux and Windows, it's under the Tools (wrench) menu.
</li>

<li>
If you aren't using the Dev channel, switch to it by following the instructions on this page:

  http://dev.chromium.org/getting-involved/dev-channel
</li>
</ol>

For example, to run Google Chrome on a Mac from the command line:

<blockquote>
<pre>/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome \
 --enable-nacl --no-sandbox --user-data-dir=~/nacl-chrome-profile</pre></blockquote>

== Make ==

<p>
Here are some of the most useful Make targets:
</p>

|| *Command* || *Description* ||
|| `make clean` || Clean everything ||
|| `make` || Build everything ||
|| `make publish` || Build the publishable version of your module (.nexe) ||
|| `make develop` || Build the development version ||