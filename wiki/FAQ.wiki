#summary Native Client SDK FAQ
= This page is obsolete =
Please visit [http://code.google.com/chrome/nativeclient/ Native Client Documentation] for the latest information.

= Native Client SDK FAQ =

Note: see the [http://code.google.com/p/nativeclient/ Native Client project page] for general information on Native Client.

Please don’t hesitate to ask question on [http://groups.google.com/group/native-client-discuss native-client-discuss] mailing list!

==General==

*Q:* Do !NaCl modules have access to serial ports, camera devices, microphones, or file I/O?
 Not at this time. Our intentions are to push such features on the standards bodies and piggyback on their efforts to make these resources available inside the browser. To see the work that is being done, see http://dev.w3.org/html5/html-device/. As a result, Native Client can only take advantage of what today’s native browsers can access.

 A note on file I/O: This is something we’re shooting for in Chrome6. However, today it’s possible to get file data from JS into your !NaCl module by creating a data URL and then unpacking the resulting string in your C++ code.


*Q:* Does !NaCl support HTML5 native Web Workers?
 Not yet, but we’re working on it.

*Q:* What are the supported architectures?
 x86_32 and x86_64. ARM is a work in progress.

 Note: if you’re on Linux, only a 32-bit browser will load .nexes. We’re working on 64-bit.

*Q:*How do I build x86-64 .nexes?
 By default, the samples in the /example folder compile for x86-32 and x86-64. To target 64bit, run nacl-g++ with the -m64 flag. For an example, see [http://code.google.com/p/nativeclient-sdk/source/browse/trunk/src/examples/hello_world/Makefile hello_world’s Makefile].

*Q:* Can I use the OpenGL ES 2.0 API directly from !NaCl?
 Yes. Be sure to link with `-lgoogle_nacl_pgl` and `-lgoogle_nacl_gpu`. See the [CodeWalkthrough_Tumbler Tumbler example].

 Note:  Some Linux computers do not have drivers for hardware-accelerated 3D graphics installed. These *must* be installed in order for 3D graphics to work. To find out if you’re using a software renderer, try running `glxinfo` and look for the Mesa driver. If it is running, then you need to install a driver that does hardware acceleration.

*Q:* If the host machine does not have OpenGL drivers, does !NaCl have a software fallback?
  No. Something worth reviewing is the ANGLE project (http://code.google.com/p/angleproject/), which provides an OpenGL ES 2.0 on DirectX layer.


==Troubleshooting==

*Q:* My .nexes are not loading. I’m using `--enable-nacl`. What gives?
 First, verify you’re using the internal version of !NaCl by visit the `about:plugins` page in Chromium. You should see ‘internal_nacl’ under Location:

 {{{
 Native Client - Version: 1, 0, 0, 1
 Description: Statically linked NaCl
 Location: internal_nacl
}}}

 Second, check that your machine’s architecture matches that of the .nexe you’re trying to load (e.g. 32bit vs. 64bit). Note: having to select the write .nexe will go away with [http://blog.chromium.org/2010/03/native-client-and-web-portability.html PNaCl] (Portable Native Client).

*Q:* I’m getting the `error: [...:ERROR:base/native_library_linux.cc(28)] dlopen 
failed when trying to open /home/xyz/.mozilla/plugins/ 
sel_ldr_bin: /home/xyz/.mozilla/plugins/sel_ldr_bin`
 It's possible that you also have an instance of the old FireFox plugin for !NaCl  installed. Please uninstall it.  Also check the about:version page in Chrome and verify that you’re running with the` --enable-nacl` flag (the `--internal-nacl` and `--enable-gpu-plugin` flags will be added automatically).

*Q:* I receive "Missing Plug-in" on mac.
 Check that the symlinks in `~/Library/Internet\ Plug-Ins` are correct. If you do change them, be sure to restart the browser. Also verify that you started the browser with the `--internal-pepper` flag in addition to the `--enable-nacl` flag.

*Q:* The Tumbler sample doesn't appear to work. 
 This is due to a [http://code.google.com/p/chromium/issues/detail?id=45246 bug 45246] in Chromium.  If you start dragging the mouse over the 3D view area (upper left corner of the page), the cube should appear.


==Development==

*Q:* How do I debug?
 See HowTo_Debug. Please note, we’re actively working on better debugging support for Windows, Mac, and Linux.

 In addition to the above, setting the` NACL_NPAPI_DEBUG=1` environment variable before starting the browser will give your a listing of NPAPI calls to/from the host and !NaCl module.

*Q:* How can my web app determine which .nexe to load (e.g. 32bit vs. 64bit)?
 !JavaScript doesn’t provide a reliable means to determine platform architecture. The current solution is to compile multiple .nexes (one for each target), and attempt to reference each in your web app. A !NaCl module will only load on the architecture it was built for. The recommended version of Chromium supports the "nexes=" attribute in the <embed> tag. See the [http://code.google.com/p/nativeclient-sdk/source/browse/trunk/src/examples/hello_world/hello_world.html#87 hello_world sample] for an example.

 Note: [http://blog.chromium.org/2010/03/native-client-and-web-portability.html PNaCl] (Portable Native Client) will remove the requirement to build multiple .nexes.

*Q:* Is it possible to build a !NaCl module with just plain C (not C++) ?
 Yes. The NPAPI we currently use is C-callable so it is possible to build a module using C and NPAPI. See [http://www.google.com/codesearch/p?hl=en#WvCCWA-oRmM/trunk/nacl/googleclient/native_client/tests/srpc_hw/srpc_hw.c&q=native_client/tests/srpc_hw%20package:http://nativeclient%5C.googlecode%5C.com&sa=N&cd=1&ct=rc&d=6 native_client/tests/srpc_hw] in the main [http://code.google.com/p/nativeclient nativeclient] project.

*Q:* What system calls are exposed to !NaCl?
 See [http://google.com/codesearch/p?hl=en#Sm7z7f6BKs4/trunk/native_client/src/trusted/service_runtime/include/sys/nacl_syscalls.h&q=syscall%20nativeclient&d=5 nacl_syscalls.h]. Note: some sys calls are only enabled in debug mode (`sel_ldr -d`) and not accessible in context of browser (e.g. `NaClSysFstat`).

*Q:* What third party libraries are available?
 http://code.google.com/p/naclports/
 